---
AWSTemplateFormatVersion: 2010-09-09
Description: CloudFormation script to create one VNS3 free edition network controller with five Amazon Linux 2 overlay clients
Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
    - Label:
        default: Network Configuration
      Parameters:
        - VpcId
        - PrivateSubnet1Id
        - PrivateSubnet2Id
        - PublicSubnet1Id
        - PublicSubnet2Id
        - RemoteAccessCidr
        - BastionSecurityGroupID
    - Label:
        default: Amazon EC2 Configuration
      Parameters:
        - ClientInstanceTypeParameter
        - KeyPairName
    - Label:
        default: Cohesive Networks VNS3 Configuration
      Parameters:
        - VNS3InstanceTypeParameter
    - Label:
        default: AWS Quick Start Configuration
      Parameters:
        - QSS3BucketName
        - QSS3KeyPrefix
    ParameterLabels:
      VpcId:
        default: VPC ID
      PrivateSubnet1Id:
        default: Private Subnet 1 ID
      PrivateSubnet2Id:
        default: Private Subnet 2 ID
      PublicSubnet1Id:
        default: Public Subnet 1 ID
      PublicSubnet2Id:
        default: Public Subnet 2 ID
      RemoteAccessCidr:
        default: Allowed External Access CIDR
      BastionSecurityGroupID:
        default: Bastion Security Group
      ClientInstanceTypeParameter:
        default: Overlay Clients Instance Type
      KeyPairName:
        default: SSH Key Name
      VNS3InstanceTypeParameter:
        default: VNS3 Instance Type
      QSS3BucketName:
        default: Quick Start S3 Bucket Name
      QSS3KeyPrefix:
        default: Quick Start S3 Key Prefix
Parameters:
  VpcId:
    Description: ID of the VPC to deploy the VNS3 overlay network into
    Type: AWS::EC2::VPC::Id
  PrivateSubnet1Id:
    Description: ID of private subnet 1 for the overlay clients
    Type: AWS::EC2::Subnet::Id
  PrivateSubnet2Id:
    Description: ID of private subnet 2 for the overlay clients
    Type: AWS::EC2::Subnet::Id
  PublicSubnet1Id:
    Description: ID of private subnet 1 for the VNS3 controllers
    Type: AWS::EC2::Subnet::Id
  PublicSubnet2Id:
    Description: ID of private subnet 2 for the VNS3 controllers
    Type: AWS::EC2::Subnet::Id
  RemoteAccessCidr:
    AllowedPattern: ^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\/([0-9]|[1-2][0-9]|3[0-2]))$
    ConstraintDescription: CIDR block parameter must be in the form x.x.x.x/x
    Description: The CIDR IP range that is permitted to access the instances. We recommend
      that you set this value to a trusted IP range.
    Type: String
  BastionSecurityGroupID:
    Description: Security group of a bastion instance to allow SSH access to client instances.
    Type: AWS::EC2::SecurityGroup::Id
  ClientInstanceTypeParameter:
    Description: Enter t3.nano, t3.micro or t3.small. Default is t3.nano.
    Type: String
    Default: 't3.nano'
    AllowedValues: 
      - t3.nano
      - t3.micro
      - t3.small
  KeyPairName:
    Description: The name of an existing public/private key pair, which allows you
      to securely connect to your instance after it launches
    Type: AWS::EC2::KeyPair::KeyName
  VNS3InstanceTypeParameter:
    Description: 'Enter t3.nano, t3.micro or t3.small. Default is t3.micro.'
    Type: String
    Default: 't3.micro'
    AllowedValues: 
      - t3.nano
      - t3.micro
      - t3.small
  QSS3BucketName:
    AllowedPattern: ^[0-9a-zA-Z]+([0-9a-zA-Z-]*[0-9a-zA-Z])*$
    ConstraintDescription: Quick Start bucket name can include numbers, lowercase
      letters, uppercase letters, and hyphens (-). It cannot start or end with a hyphen
      (-).
    Default: aws-quickstart
    Description: S3 bucket name for the Quick Start assets. This string can include
      numbers, lowercase letters, uppercase letters, and hyphens (-). It cannot start
      or end with a hyphen (-).
    Type: String
  QSS3KeyPrefix:
    AllowedPattern: ^[0-9a-zA-Z-/]*$
    ConstraintDescription: Quick Start key prefix can include numbers, lowercase letters,
      uppercase letters, hyphens (-), and forward slash (/).
    Default: quickstart-cohesive-vns3
    Description: S3 key prefix for the Quick Start assets. Quick Start key prefix
      can include numbers, lowercase letters, uppercase letters, hyphens (-), and
      forward slash (/).
    Type: String
Conditions:
  GovCloudCondition:
    !Or
      - !Equals [!Ref 'AWS::Region', us-gov-east-1]
      - !Equals [!Ref 'AWS::Region', us-gov-west-1]
Mappings: 
  RegionMap: 
    ap-northeast-1: 
      VNS3: ami-062ee71212081e280
      AmzLnx2: ami-0d7ed3ddb85b521a6
    ap-northeast-2: 
      VNS3: ami-0fd184edabb67ff7c
      AmzLnx2: ami-018a9a930060d38aa
    ap-south-1: 
      VNS3: ami-04fa3847f12179bbf
      AmzLnx2: ami-0937dcc711d38ef3f
    ap-southeast-1: 
      VNS3: ami-0f7fe0c9d55f5d94c
      AmzLnx2: ami-04677bdaa3c2b6e24
    ap-southeast-2: 
      VNS3: ami-0f1e71713f4b94c86
      AmzLnx2: ami-0c9d48b5db609ad6e
    ca-central-1: 
      VNS3: ami-0724736041a6dd69a
      AmzLnx2: ami-0de8b8e4bc1f125fe
    eu-central-1: 
      VNS3: ami-07f43803c8e29a819
      AmzLnx2: ami-0eaec5838478eb0ba
    eu-north-1:
      VNS3: ami-48169836
      AmzLnx2: ami-6d27a913
    eu-west-1: 
      VNS3: ami-010e25e412e24fa22
      AmzLnx2: ami-0fad7378adf284ce0
    eu-west-2:
      VNS3: ami-08386e5e061446106
      AmzLnx2: ami-0664a710233d7c148
    eu-west-3:
      VNS3: ami-01450508266d05894
      AmzLnx2: ami-0854d53ce963f69d8
    sa-east-1:
      VNS3: ami-0e49820c14755c6c8
      AmzLnx2: ami-0b04450959586da29
    us-east-1:
      VNS3: ami-0f1cb9aac86bfdd40
      AmzLnx2: ami-035be7bafff33b6b6
    us-east-2:
      VNS3: ami-0237b7b3cb0eba5f5
      AmzLnx2: ami-04328208f4f0cf1fe
    us-west-1:
      VNS3: ami-021d86dbbb378d6c9
      AmzLnx2: ami-0799ad445b5727125
    us-west-2:
      VNS3: ami-094fd4b3d43102d26
      AmzLnx2: ami-032509850cf9ee54e
Resources:
  ElasticIPVNS3:
    Type: AWS::EC2::EIP
    Properties:
      Domain: vpc
  ClientSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: !Sub ${AWS::StackName}
      SecurityGroupEgress:
      - CidrIp: 0.0.0.0/0
        IpProtocol: '-1'
      SecurityGroupIngress:
      - FromPort: 22
        IpProtocol: tcp
        SourceSecurityGroupId: !Ref BastionSecurityGroupID
        ToPort: 22
      Tags:
      - Key: Name
        Value: !Sub ${AWS::StackName}-host
      VpcId: !Ref VpcId
  VNS3SecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: !Sub ${AWS::StackName}
      SecurityGroupEgress:
      - CidrIp: 0.0.0.0/0
        IpProtocol: '-1'
      SecurityGroupIngress:
      - FromPort: 1194
        IpProtocol: tcp
        SourceSecurityGroupId: !Ref ClientSecurityGroup
        ToPort: 1194
      - FromPort: 8000
        IpProtocol: tcp
        SourceSecurityGroupId: !Ref ClientSecurityGroup
        ToPort: 8000
      - CidrIp: !Ref RemoteAccessCidr
        FromPort: 22
        IpProtocol: tcp
        ToPort: 22
      - CidrIp: !Ref RemoteAccessCidr
        FromPort: 8000
        IpProtocol: tcp
        ToPort: 8000
      Tags:
      - Key: Name
        Value: !Sub ${AWS::StackName}-VNS3
      VpcId: !Ref VpcId
  VNS3RecoveryTestAlarm:
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmDescription: Trigger a recovery when instance status check fails for 2 consecutive minutes.
      Namespace: AWS/EC2
      MetricName: StatusCheckFailed_System
      Statistic: Minimum
      Period: 60
      EvaluationPeriods: 2
      ComparisonOperator: GreaterThanThreshold
      Threshold: 0
      AlarmActions: 
        - !Sub 'arn:${AWS::Partition}:automate:${AWS::Region}:ec2:recover'
      Dimensions:
      - Name: InstanceId
        Value:
          Ref: VNS3
  VNS3:
    Type: AWS::EC2::Instance
    Properties:
      ImageId: !FindInMap [ RegionMap, !Ref 'AWS::Region', VNS3 ]
      InstanceType: !Ref VNS3InstanceTypeParameter
      KeyName: !Ref KeyPairName
      PrivateIpAddress: 10.0.0.5
      SecurityGroupIds:
      - !Ref VNS3SecurityGroup
      SourceDestCheck: False
      SubnetId: !Ref PublicSubnet1Id
      Tags:
      - Key: Name
        Value: !Sub ${AWS::StackName}-vns3
  IPAssoc:
    Type: AWS::EC2::EIPAssociation
    Properties:
      InstanceId: !Ref VNS3
      AllocationId: !GetAtt ElasticIPVNS3.AllocationId
  ClientRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
        - Effect: Allow
          Principal:
            Service: ec2.amazonaws.com
          Action: sts:AssumeRole
      Policies:
      - PolicyName: S3Access
        PolicyDocument:
          Version: 2012-10-17
          Statement:
          - Effect: Allow
            Resource: !Sub arn:${AWS::Partition}:s3:::${QSS3BucketName}/${QSS3KeyPrefix}/*
            Action: s3:GetObject
  ClientProfile:
    Type: AWS::IAM::InstanceProfile
    Properties:
      Roles:
        - !Ref ClientRole
  ClientLaunchTemplate:
    Type: AWS::EC2::LaunchTemplate
    Metadata:
      AWS::CloudFormation::Authentication:
        S3Credentials:
          buckets:
            - !Ref QSS3BucketName
          roleName: !Ref ClientRole
          type: S3
      AWS::CloudFormation::Init:
        config:
          files:
            /tmp/client-bootstrap.sh:
              authentication: S3AccessCreds
              group: root
              mode: '000755'
              owner: root
              source: !Sub
                - https://${QSS3BucketName}.${QSS3Region}.amazonaws.com/${QSS3KeyPrefix}/scripts/client-bootstrap.sh
                - QSS3Region: !If [GovCloudCondition, !Sub 's3-${AWS::Region}', s3]
          commands:
            b-bootstrap:
              command: /tmp/client-bootstrap.sh
              env:
                VNS3IP: !GetAtt VNS3.PrivateIp
                VNS3PW: !Ref VNS3
    Properties:
      LaunchTemplateData:
        IamInstanceProfile:
          Name: !Ref ClientProfile
        ImageId: !FindInMap [ RegionMap, !Ref 'AWS::Region', AmzLnx2 ]
        InstanceType: !Ref ClientInstanceTypeParameter
        KeyName: !Ref KeyPairName
        SecurityGroupIds:
        - !GetAtt ClientSecurityGroup.GroupId
        UserData:
          Fn::Base64:
            !Sub |
              #!/bin/bash -e

              yum update -y aws-cfn-bootstrap
              /opt/aws/bin/cfn-init -v --stack ${AWS::StackName} --resource ClientLaunchTemplate --region ${AWS::Region}
              /opt/aws/bin/cfn-signal -e $? --stack ${AWS::StackName} --resource ClientWaitCondition --region ${AWS::Region}
  ClientWaitCondition:
    Type: AWS::CloudFormation::WaitCondition
    CreationPolicy:
      ResourceSignal:
        Count: 5
        Timeout: PT10M
    DependsOn:
      - VNS3
      - ClientLaunchTemplate
  Client1:
    Type: AWS::EC2::Instance
    DependsOn:
      - VNS3
    Properties:
      LaunchTemplate:
        LaunchTemplateId: !Ref ClientLaunchTemplate
        Version: !GetAtt ClientLaunchTemplate.LatestVersionNumber
      SubnetId: !Ref PrivateSubnet1Id
  Client2:
    Type: AWS::EC2::Instance
    DependsOn:
      - VNS3
    Properties:
      LaunchTemplate:
        LaunchTemplateId: !Ref ClientLaunchTemplate
        Version: !GetAtt ClientLaunchTemplate.LatestVersionNumber
      SubnetId: !Ref PrivateSubnet1Id
  Client3:
    Type: AWS::EC2::Instance
    DependsOn:
      - VNS3
    Properties:
      LaunchTemplate:
        LaunchTemplateId: !Ref ClientLaunchTemplate
        Version: !GetAtt ClientLaunchTemplate.LatestVersionNumber
      SubnetId: !Ref PrivateSubnet1Id
  Client4:
    Type: AWS::EC2::Instance
    DependsOn:
      - VNS3
    Properties:
      LaunchTemplate:
        LaunchTemplateId: !Ref ClientLaunchTemplate
        Version: !GetAtt ClientLaunchTemplate.LatestVersionNumber
      SubnetId: !Ref PrivateSubnet2Id
  Client5:
    Type: AWS::EC2::Instance
    DependsOn:
      - VNS3
    Properties:
      LaunchTemplate:
        LaunchTemplateId: !Ref ClientLaunchTemplate
        Version: !GetAtt ClientLaunchTemplate.LatestVersionNumber
      SubnetId: !Ref PrivateSubnet2Id
Outputs:
  VNS3PublicIp:
    Description: The Public IP of the VNS3 Network Controller
    Value: !Ref ElasticIPVNS3
  VNS3InstanceId:
    Description: The Instance ID and default password of the VNS3 Network Controller
    Value: !Ref VNS3
